name: Demo workflow
on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
  pull_request:
    types: [opened, reopened, synchronize]
env:
  BASE_URL: http://0.0.0.0:8081
  DRILL_API_KEY: ${{ secrets.DRILL_API_KEY }}
  DRILL_API_URL: ${{ vars.DRILL_API_URL }}
  DRILL_BOT_GITHUB_TOKEN: ${{ secrets.DRILL_BOT_GITHUB_TOKEN }}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Build app
        run: ./gradlew clean assemble
      - name: Scan application archive and send classes and methods to Drill4J
        run: ./gradlew drillScanAppArchive
      - name: Send build info to Drill4J
        run: ./gradlew drillSendBuildInfo
  unitTests:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Run tests
        run: ./gradlew clean test
        env:
          DRILL_COMMIT_SHA: ${{ github.event.pull_request.head.sha || github.sha }}
      - if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: ${{ github.workspace }}/*/build/reports/*
#  dockerBuild:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#        with:
#          ref: ${{ github.head_ref }}
#      - name: Set up Docker Build
#        uses: docker/setup-buildx-action@v3
#      - name: Build and export
#        uses: docker/build-push-action@v5
#        with:
#          context: .
#          tags: realworld-spring-webflux:latest
#          outputs: type=docker,dest=/tmp/app.tar
#      - name: Upload artifact
#        uses: actions/upload-artifact@v4
#        with:
#          name: realworld-image
#          path: /tmp/app.tar
#  apiTests:
#    needs: dockerBuild
#    runs-on: ubuntu-latest
#    steps:
#      - name: Download artifact
#        uses: actions/download-artifact@v4
#        with:
#          name: realworld-image
#          path: /tmp
#      - name: Set up Docker Build
#        uses: docker/setup-buildx-action@v3
#      - name: Load image
#        run: docker load --input /tmp/app.tar
#      - name: Checkout
#        uses: actions/checkout@v4
#        with:
#          ref: ${{ github.head_ref }}
#      - name: Set up JDK 11
#        uses: actions/setup-java@v4
#        with:
#          java-version: '11'
#          distribution: 'temurin'
#      - name: Make gradlew executable
#        run: chmod +x ./gradlew
#      - name: Download Drill4J agents
#        run: ./gradlew drillDownloadAgents
#      - name: Unzip java-agent
#        run: |
#          mkdir -p ./temp-agent-dir Docker/agent
#          unzip agent.zip -d ./temp-agent-dir
#          find temp-agent-dir -mindepth 2 -exec mv -t Docker/agent/ {} +
#      - name: Run docker-compose
#        run: docker compose -f ./Docker/docker-compose.yml up -d
#        env:
#          DRILL_COMMIT_SHA: ${{ github.event.pull_request.head.sha || github.sha }}
#      - name: Run api tests
#        run: ./gradlew runApiTests
#      - name: Sleep for 10 seconds
#        uses: jakejarvis/wait-action@master
#        with:
#          time: '10s'
#      - name: Docker-compose down
#        run: docker compose -f ./Docker/docker-compose.yml down -v
#  reportByPR:
#    if: github.event_name == 'pull_request'
#    needs: test
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#        with:
#          ref: ${{ github.head_ref }}
#          fetch-depth: 0
#      - name: Set up JDK 11
#        uses: actions/setup-java@v4
#        with:
#          java-version: '11'
#          distribution: 'temurin'
#      - name: Make gradlew executable
#        run: chmod +x ./gradlew
#      - name: Send coverage report to Drill4J
#        run: ./gradlew drillGithubPullRequestReport
#  reportByBranch:
#    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
#    needs: test
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#      - name: Set up JDK 11
#        uses: actions/setup-java@v4
#        with:
#          java-version: '11'
#          distribution: 'temurin'
#      - name: Make gradlew executable
#        run: chmod +x ./gradlew
#      - name: Generate Drill4J Change Testing Report
#        run: ./gradlew drillGenerateChangeTestingReport
#      - name: Archive report
#        uses: actions/upload-artifact@v4
#        with:
#          name: change-testing-report
#          path: ./build/drill-reports/drillReport.md